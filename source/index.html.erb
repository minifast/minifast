<header>
  <h1 class="logo">Ministry of Velocity</h1>
  <h3><a href="https://twitter.com/minifast">@minifast</a></h3>
  <h4><a href="mailto:contact@ministryofvelocity.com">contact@ministryofvelocity.com</a></h4>
</header>

<section class="who">
  <article>
    <h1>Who is Ministry of Velocity?</h1>
    <p>
      Sarah Mei is the Head of Propaganda.  In four short years, Sarah reshaped the San Francisco Ruby community.  Now she helps big teams get better at including new engineers.
    </p>
    <p>
      Doc Ritezel is the Head of Operations.  Having previously founded a design agency and a Wordpress integrator, Doc brings a customer-oriented view to growing engineering teams.
    </p>
  </article>
</section>

<section class="what">
  <article>
    <h1>What does Ministry of Velocity do?</h1>
    <p>
      We focus on improving communication. Developers on modern teams spend well over half their waking hours designing or implementing software.
    </p>
    <p>
      We emphasize discipline. The most senior teams we've seen are exemplars of consistency, especially in the face of changing business needs.
    </p>
  </article>
</section>

<section class="why">
  <article>
    <h1>Why emphasize communication over technology?</h1>
    <p>
      Software structure reflects its producing team's communication structure. We believe that improving both is possible, but improving communication has a lasting impact on velocity.
    </p>
    <p>
      Software is critical to our modern world: it dispatches fire fighters, puts money into bank accounts and prints report cards. Enabling software to respond to real needs is our goal.
    </p>
  </article>
</section>

<section class="how">
  <article>
    <h1>What impact do you have on teams?</h1>
    <p>
      We are partners in developing your software. We apply standard practices acquired from academia, government and psychology to improve the quality and speed of analysis.
    </p>
    <p>
      We collaboratively build great software by example.  While all software can stand incremental improvement, your team can choose where to apply our decades of experience.
    </p>
  </article>
</section>

<section class="agile">
  <article>
    <h1>What are agile and extreme programming?</h1>
    <p>
      Agile is shorthand for discovering your users' needs, working as a team, delivering software and learning from experience. In practice, agile means valuing people over process.
    </p>
    <p>
      Extreme programming is a state of iterative team improvement. We practice some of its components, like test-driven development, pair programmingÂ and continuous deployment.
    </p>
  </article>
</section>

<footer>
  <h1>Pairing Solves Everything.</h1>
  <h2>San Francisco, California</h2>
  <h3>Copyright 2014</h3>
</section>

<script>
$(function(){
  $.stellar({
    horizontalScrolling: false,
    verticalOffset: 40
  });
});
</script>
