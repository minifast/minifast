{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Storage, CDN and DNS for a static website.",

  "Parameters" : {
    "HostedZone" : {
      "Type" : "String",
      "Description" : "The main Amazon Route 53 hosted zone",
      "Default" : "ministryofvelocity.com"
    },
    "AlternateHostedZone" : {
      "Type" : "String",
      "Description" : "Another Amazon Route 53 hosted zone",
      "Default" : "minifast.co"
    },
    "Certificate" : {
      "Type" : "String",
      "Description" : "The ARN of the certificate to use"
    }
  },

  "Mappings" : {
    "RegionMap" : {
      "us-east-1"      : { "s3BucketDomain" : ".s3.amazonaws.com" },
      "us-west-1"      : { "s3BucketDomain" : ".s3-us-west-1.amazonaws.com" },
      "us-west-2"      : { "s3BucketDomain" : ".s3-us-west-2.amazonaws.com" },
      "eu-west-1"      : { "s3BucketDomain" : ".s3-eu-west-1.amazonaws.com" },
      "sa-east-1"      : { "s3BucketDomain" : ".s3-sa-east-1.amazonaws.com" },
      "ap-northeast-1" : { "s3BucketDomain" : ".s3-ap-northeast-1.amazonaws.com" },
      "ap-southeast-1" : { "s3BucketDomain" : ".s3-ap-southeast-1.amazonaws.com" },
      "ap-southeast-2" : { "s3BucketDomain" : ".s3-ap-southeast-2.amazonaws.com" }
    }
  },

  "Resources" : {
    "Bucket" : {
      "Type" : "AWS::S3::Bucket",
      "Properties" : {
        "AccessControl" : "PublicRead",
        "WebsiteConfiguration" : {
          "IndexDocument" : "index.html",
          "ErrorDocument" : "error.html"
        }
      }
    },

    "CDN" : {
      "Type" : "AWS::CloudFront::Distribution",
      "Properties" : {
        "DistributionConfig" : {
          "Enabled" : "true",
          "DefaultRootObject" : "index.html",
          "Origins" : [{
            "DomainName": { "Fn::Join" : [ "", [{ "Ref" : "Bucket" }, ".s3-website-", {"Ref" : "AWS::Region"}, ".amazonaws.com"]]},
            "Id": "BucketOrigin",
            "CustomOriginConfig": {
              "HTTPPort" : "80",
              "HTTPSPort" : "443",
              "OriginProtocolPolicy" : "https-only"
            }
          }],
          "DefaultCacheBehavior" : {
            "TargetOriginId" : "BucketOrigin",
            "ForwardedValues" : {
                "QueryString" : "false"
             },
            "ViewerProtocolPolicy" : "redirect-to-https"
          },
          "Aliases" : [
            { "Fn::Join" : [ ".", [{"Ref" : "AWS::StackName"}, { "Ref" : "HostedZone" }]]},
            { "Fn::Join" : [ ".", [{"Ref" : "AWS::StackName"}, { "Ref" : "AlternateHostedZone" }]]}
          ]
        }
      }
    },

    "DNS" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [{ "Ref" : "HostedZone" }, "."]]},
        "Comment" : "CNAME redirect custom name to CloudFront distribution",
        "Name" : { "Fn::Join" : [ ".", [{"Ref" : "AWS::StackName"}, { "Ref" : "HostedZone" }]]},
        "Type" : "CNAME",
        "TTL" : "900",
        "ResourceRecords" : [{"Fn::GetAtt" : ["CDN", "DomainName"]}]
      }
    },

    "AlternateDNS" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [{ "Ref" : "AlternateHostedZone" }, "."]]},
        "Comment" : "CNAME redirect custom name to CloudFront distribution",
        "Name" : { "Fn::Join" : [ ".", [{"Ref" : "AWS::StackName"}, { "Ref" : "AlternateHostedZone" }]]},
        "Type" : "CNAME",
        "TTL" : "900",
        "ResourceRecords" : [{"Fn::GetAtt" : ["CDN", "DomainName"]}]
      }
    }
  },

  "Outputs" : {
    "DistributionId" : {
      "Description" : "CloudFront Distribution Id",
      "Value" : { "Ref" : "CDN" }
    },

    "BucketName" : {
      "Description" : "S3 Bucket name",
      "Value" : { "Ref" : "Bucket" }
    }
  }
}
